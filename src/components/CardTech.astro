---
interface ITech {
  name: string,
  imagePath: string,
  imageHeight: number,
  imageWidth: number,
  invertOnDark?: boolean
  order: number
}

const { tech, images }: { tech: ITech, images: [{key: string, value: Function}] } = Astro.props;
import { Image } from 'astro:assets'

let imgClass = "w-[35%] lg:w-[45%] h-auto self-center sm:self-left sm:m-3";
imgClass = tech.invertOnDark ? imgClass + " dark:invert" : imgClass;

let image = images[tech.imagePath]()
---
<card-tech class="hidden" data-techId={tech.order}></card-tech>
<div
  id={"tech-card-" + tech.order}
  class="card flex flex-col py-3 lg:py-0 md:justify-center border-2 rounded-xl border-black dark:border-white space-y-4 sm:space-y-7 md:min-w-[170px] md:min-h-[200px] will-change-[opacity] shadow"
>
  <pre
    class="ml-0 sm:ml-3 text-sm md:text-base text-black dark:text-white opacity-40">#{tech.order}</pre>
  <Image
    src={image}
    alt={tech.name}
    format="webp"
    class={imgClass}
    quality={'mid'}
  />
  <h2 class="self-center text-xl sm:text-2xl text-black dark:text-white">{tech.name}</h2>
</div>

<script>
  import { gsap, ScrollTrigger } from "gsap/all";
  gsap.registerPlugin(ScrollTrigger);

  class CardTech extends HTMLElement {
    constructor() {
      super();

      const tech = this.dataset.techid;

      const _drawCards = () => {
        const card = document.getElementById(`tech-card-${tech}`);
        gsap.set(card, { opacity: 0 });
        const tl = gsap.timeline({
          scrollTrigger: {
            trigger: card,
            start: "top 100%",
            end: "bottom 95%",
            scrub: 2,
          },
        });
        tl.to(card, { opacity: 1, duration: 0.5 });
      };

      _drawCards();
    }
  }

  customElements.define("card-tech", CardTech);
</script>
