---
import ContactCard from './ContactCard.astro'

interface IContactMedium {
    href: string,
    iconName: string,
    class?: string,
    iconClass?: string,
    iconSize?: number,
    tooltip?: string
}

const baseContactClass = "mx-auto mt-8 rounded-xl outline outline-1 hover:outline-2 outline-gray-800 dark:outline-gray-200 py-4 px-8";
const baseIconClass = "gray-800 dark:gray-100";
const baseIconSize = 48;

// Do not forget to add icons into astro.config.mjs
const contactMediums: IContactMedium[] = [
    {
        href: "mailto:r.sickenberg@gmail.com",
        iconName: "ph:envelope-thin",
        tooltip: 'Email'
    },
    {
        href: "https://github.com/RSickenberg",
        iconName: "ph:github-logo-thin",
        tooltip: 'GitHub'
    },
    {
        href: "https://www.linkedin.com/in/romain-sickenberg",
        iconName: "ph:linkedin-logo-thin",
        tooltip: 'Linkedin'
    },
    {
        href: "https://www.instagram.com/romain.scknb/",
        iconName: "ph:instagram-logo-thin",
        tooltip: 'Instagram'
    },
    {
        href: "/assets/pdf/onepage.pdf",
        iconName: "ph:file-pdf-thin",
        tooltip: 'Curriculum Vitae'
    },
    {
        href: '/assets/pdf/mindset_en.pdf',
        iconName: 'ph:head-circuit-thin',
        tooltip: 'Personality & Logic Tests'
    }
];
---

<section class="flex items-center justify-center min-h-screen">
    <div class="grid grid-flow-col w-[90%] mx-auto gap-10">
        <article class="px-8 py-6">
            <h2 class="text-4xl font-bold text-center text-black opacity-0 md:text-left dark:text-white contact-me">Say
                Hello!</h2>
            <!-- Line -->
            <div class="h-16 w-0.5 bg-gray-700 dark:bg-gray-200 my-8 mx-auto md:m-6 line opacity-0"/>
            <div class="opacity-0 contact-me-methods">
                <p class="mb-8 text-center md:text-xl sm:text-justify">
                    Here are few ways to learn more about me.<br> If you have a project, an idea or a coffee to share,
                    be
                    free to contact me!<br><br>
                    I'll try my best to make it <span
                        class="underline decoration-2 decoration-gray-500 dark:decoration-gray-200">for you</span>.
                </p>

                <div class={'grid grid-flow-row grid-cols-2 sm:grid-cols-3 2xl:grid-cols-6 gap-3'}>
                    {contactMediums.map((medium => {
                        return <ContactCard href={medium.href} className={medium.class ?? baseContactClass}
                                             iconName={medium.iconName}
                                             iconSize={medium.iconSize ?? baseIconSize}
                                             iconClass={medium.iconClass ?? baseIconClass}
                                             tooltip={medium.tooltip}
                                />
                    }))}
                </div>
            </div>
        </article>
    </div>
</section>

<script>
    import {gsap, ScrollTrigger} from "gsap/all";
    import {colors, alphaValues, isDarkMode} from "../utils/getColors";

    gsap.registerPlugin(ScrollTrigger);

    _initialize();

    window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", () => {
            _setColors();
        })

    function _initialize() {
        _setColors();
        gsap.set(".line", {
            opacity: 0
        });
        gsap.set(".contact-me", {
            opacity: 0
        });
        gsap.set(".contact-me-methods", {
            opacity: 0
        });

        _renderTo();
    }

    function _renderTo() {
        gsap.to(".contact-me", {
            opacity: isDarkMode ? alphaValues.dark : alphaValues.light,
            ease: "power4.out",
            scrollTrigger: {
                trigger: ".contact-me",
                start: "top 100%",
                scrub: 1,
            }
        });
        gsap.to(".line", {
            opacity: isDarkMode ? alphaValues.dark : alphaValues.light,
            ease: "power4.out",
            scrollTrigger: {
                trigger: ".contact-me",
                start: "top 100%",
                scrub: 1,
            }
        });
        gsap.to(".contact-me-methods", {
            opacity: isDarkMode ? alphaValues.dark : alphaValues.light,
            ease: "power4.out",
            scrollTrigger: {
                trigger: ".contact-me-methods",
                start: "top 90%",
                scrub: 2,
            }
        })
    }

    function _setColors() {
        gsap.set(".line", {
            color: isDarkMode ? colors.light : colors.dark,
            opacity: isDarkMode ? alphaValues.dark : alphaValues.light,
        });
        gsap.set(".contact-me", {
            color: isDarkMode ? colors.light : colors.dark,
            opacity: isDarkMode ? alphaValues.dark : alphaValues.light,
        });
        gsap.set(".contact-me-methods", {
            color: isDarkMode ? colors.light : colors.dark,
            opacity: isDarkMode ? alphaValues.dark : alphaValues.light,
        });
    }
</script>
