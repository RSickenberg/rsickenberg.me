---
import ContactCard from './ContactCard.astro'

interface IContactMedium {
    href: string,
    iconName: string,
    class?: string,
    iconClass?: string,
    iconSize?: number,
    tooltip?: string
}

const baseContactClass = "mx-auto mt-8 rounded-xl outline outline-1 hover:outline-2 outline-gray-800 dark:outline-gray-200 py-4 px-8";
const baseIconClass = "gray-800 dark:gray-100";
const baseIconSize = 48;

// Do not forget to add icons into astro.config.mjs
const contactMediums: IContactMedium[] = [
    {
        href: "mailto:r.sickenberg@gmail.com",
        iconName: "ph:envelope-thin",
        tooltip: 'Email'
    },
    {
        href: "https://github.com/RSickenberg",
        iconName: "ph:github-logo-thin",
        tooltip: 'GitHub'
    },
    {
        href: "https://www.linkedin.com/in/romain-sickenberg",
        iconName: "ph:linkedin-logo-thin",
        tooltip: 'Linkedin'
    },
    {
        href: "https://www.instagram.com/romain.scknb/",
        iconName: "ph:instagram-logo-thin",
        tooltip: 'Instagram'
    },
    {
        href: "/assets/pdf/onepage.pdf",
        iconName: "ph:file-pdf-thin",
        tooltip: 'Curriculum Vitae'
    },
    {
        href: '/assets/pdf/mindset_en.pdf',
        iconName: 'ph:head-circuit-thin',
        tooltip: 'Personality & Logic Tests'
    }
];
---

<section id="contact" class="flex items-center justify-center min-h-screen md:pt-20 pt-0">
    <div class="flex flex-col w-[90%] mx-auto gap-4 px-8">
        <header class="md:my-12 text-center md:text-left">
            <div class="text-black dark:text-white contact-title opacity-0">
                <h2 class="text-4xl font-bold sm:font-extrabold">Say Hello!</h2>
            </div>
            <div class="h-16 w-0.5 bg-gray-700 dark:bg-gray-200 my-8 mx-auto md:m-6 contact-line opacity-0"></div>
            <div class="opacity-0 contact-subtitle md:pl-5">
                <p class="text-center md:text-xl sm:text-justify">
                    Here are few ways to learn more on my subject.<br> If you have a project, an idea or a coffee to share,
                    feel free to contact me!<br><br>
                    I'll try my best to make it <span
                        class="underline decoration-2 decoration-gray-500 dark:decoration-gray-200">for you</span>.
                </p>
            </div>
        </header>

        <div class={'grid grid-flow-row grid-cols-2 sm:grid-cols-3 2xl:grid-cols-6 gap-3 methods-grid'}>
            {contactMediums.map((medium => {
                return <ContactCard href={medium.href} className={medium.class ?? baseContactClass}
                                     iconName={medium.iconName}
                                     iconSize={medium.iconSize ?? baseIconSize}
                                     iconClass={medium.iconClass ?? baseIconClass}
                                     tooltip={medium.tooltip}
                        />
            }))}
        </div>
    </div>
</section>

<script>
    import {gsap} from "gsap/all";
    import {colors, alphaValues, isDarkMode} from "../utils/getColors";

    function _initialize() {
        _setColors();
        gsap.set([".contact-line", ".contact-title", ".contact-subtitle", ".methods-grid"], {opacity: 0})
        _renderTo();
    }

    function _renderTo() {
		const opacityValue = isDarkMode ? alphaValues.dark : alphaValues.light;
		let tl = gsap.timeline({
            scrollTrigger: {
                trigger: "#contact",
                start: "top 70%",
                end: "+=600",
                scrub: 4,
				once: true
            }
        });
        tl.to(".contact-title", {
            opacity: opacityValue,
            ease: "power4.inOut",
            duration: 1.3,
            delay: 0.3
        })
		.to(".contact-line", {
			opacity: opacityValue,
			ease: "power4.inOut",
			duration: 1.1,
			delay: 0.3
		}, '-=1.0')
		.to(".contact-subtitle", {
			opacity: opacityValue,
			ease: "power4.inOut",
			duration: 1.2,
			delay: 0.3,
		}, '-=0.8')
		.to(".methods-grid", {
			opacity: opacityValue,
			ease: "power4.inOut",
			duration: 1.2,
			delay: 0.3,
		}, '-=0.8');
    }

    function _setColors() {
		const colorValue = isDarkMode ? colors.light : colors.dark;
		const opacityValue = isDarkMode ? alphaValues.dark : alphaValues.light;
        gsap.set([".contact-line", ".contact-title", ".contact-subtitle", ".methods-grid"], {
			color: colorValue,
			opacity: opacityValue,
        })
    }

    _initialize();
    window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", _setColors);
</script>
