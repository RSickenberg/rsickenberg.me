---
import Navbar from "components/Navbar.astro";
import "locomotive-scroll/dist/locomotive-scroll.css";

export interface Props {
  title: string;
  description?: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
	<meta name="theme-color" content="#fff" />
    <title>{title}</title>
    
	<link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body class="dark:bg-black bg-white">
	<Navbar />

	<div data-scroll-container>
    	<slot />
	</div>
  </body>
</html>

<script>
  import LocomotiveScroll from "locomotive-scroll";
  import { setState, getState } from "utils/getCurrentSection";
  const scroll = new LocomotiveScroll({
    el: document.querySelector("[data-scroll-container]"),
    smooth: true,
    lerp: 0.05,
    multiplier: 0.5,
    smartphone: {
      smooth: true,
      lerp: 0.3,
      multiplier: 50,
    },
    tablet: {
      smooth: true,
      lerp: 0.3,
      multiplier: 50,
    },
  });
 
  const sections = ["", "about", "projects", "contact"];
  window["locomotiveScroll"] = scroll;
  scroll.on("scroll", (args) => {
    sections.forEach((sect) => {
      const container = args.currentElements[sect];
      const exists = typeof container != "undefined";
      if (exists && container.inView && getState().activeSection != sect)
        setState({ activeSection: sect ? `${sect}.` : "" });
    });
  });
</script>
